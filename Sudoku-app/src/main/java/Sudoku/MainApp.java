/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Sudoku;

import Sudoku.controller.LösungController;
import Sudoku.controller.MainAppController;
import Sudoku.controller.StartController;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class MainApp extends Application {

	private Stage primaryStage;
	private AnchorPane rootLayout;
	private Scene scene;

	private int GRID_SIZE;

	private int[][] board2x2 = { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 } };

	private int[][] board3x3 = { { 1, 2, 3, 0, 0, 0, 5, 0, 0 }, 
								 { 4, 5, 6, 0, 0, 0, 0, 7, 0 },
								 { 7, 8, 9, 0, 0, 0, 0, 0, 0 },
								 { 0, 0, 0, 9, 8, 7, 0, 0, 0 },
								 { 0, 0, 0, 6, 5, 4, 3, 0, 8 },
								 { 0, 0, 0, 3, 2, 1, 0, 0, 0 },
								 { 0, 0, 0, 0, 0, 0, 1, 2, 3 }, 
								 { 0, 9, 0, 0, 0, 0, 4, 5, 6 },
								 { 5, 0, 0, 0, 0, 0, 7, 8, 9 } };
	private int[][] board4x4 = { 
			{ 13, 0, 0, 14, 7, 11, 0, 0, 0, 0, 0, 8, 10, 0, 3, 0 },
			{ 0, 9, 0, 7, 0, 0, 0, 10, 13, 0, 0, 0, 8, 15, 16, 6 }, 
			{ 0, 0, 0, 5, 0, 0, 0, 8, 11, 9, 4, 0, 0, 1, 0, 0 },
			{ 15, 16, 0, 0, 13, 1, 0, 0, 2, 0, 0, 5, 7, 0, 0, 11 },
			
			{ 0, 0, 1, 0, 0, 0, 11, 0, 8, 6, 15, 16, 3, 0, 0, 0 }, 
			{ 5, 0, 3, 0, 0, 6, 15, 0, 0, 11, 9, 0, 0, 0, 0, 0 },
			{ 7, 0, 9, 0, 0, 5, 2, 0, 0, 0, 1, 12, 0, 6, 0, 0 },
			{ 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 4, 0, 0, 0 },
			
			{ 12, 14, 0, 1, 0, 0, 0, 0, 0, 0, 6, 15, 0, 0, 0, 0 }, 
			{ 4, 0, 0, 0, 0, 0, 5, 0, 0, 14, 0, 0, 0, 0, 0, 16 },
			{ 10, 0, 0, 0, 0, 8, 6, 0, 0, 7, 0, 0, 0, 0, 13, 0 },
			{ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 9, 7, 11, 0 },
			
			{ 0, 0, 0, 2, 0, 0, 0, 0, 9, 0, 0, 0, 13, 0, 14, 1 },
			{ 0, 0, 0, 11, 0, 0, 10, 0, 0, 12, 14, 0, 6, 0, 0, 15 },
			{ 0, 12, 14, 13, 0, 9, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2 },
			{ 16, 8, 0, 15, 0, 12, 14, 13, 0, 0, 5, 2, 11, 0, 7, 0 } };

	public MainApp() {



	}

	@Override
	public void start(Stage primaryStage) {

		this.primaryStage = primaryStage;
		this.primaryStage.setTitle("Sudoku");
		this.primaryStage.setMaximized(true);
		this.primaryStage.setResizable(false);
		this.GRID_SIZE = 9;

		initRootLayout();
		initStartLayout(boardübergeben());
	}

	public int[][] boardübergeben() {

		switch (this.GRID_SIZE) {
		case 4:

			return board2x2;

		case 9:

			return board3x3;
		case 16:

			return board4x4;

		default:
			System.out.println("Fehler!");
			break;
		}
		return null;

	}

	public void initStartLayout(int[][] board) {

		try {
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(MainApp.class.getResource("../fxml Dateien/Start.fxml"));
			VBox v = (VBox) loader.load();

			StartController controller = loader.getController();
			controller.setMainApp(this);
			
			controller.startwerteSetzen(board);

			if (this.rootLayout.getChildren().size() == 3) {
				this.rootLayout.getChildren().remove(2);
			}

			this.rootLayout.getChildren().add(v);

			System.out.println("Startlayout erfolgreich!");

		} catch (Exception e) {

			fehlerBeimLadenVonFxmlDateiAnzeigen("Startlayout: " + e.getMessage());
			System.out.println("Startlayout: " + e.getMessage());

		}

	}
	
	public void initRootLayout() {

		try {
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(MainApp.class.getResource("../fxml Dateien/Main.fxml"));
			this.rootLayout = (AnchorPane) loader.load();

			MainAppController controller = loader.getController();
			controller.setMainApp(this);
			controller.startwerteSetzen();

			this.scene = new Scene(rootLayout);
			primaryStage.setScene(scene);
			primaryStage.show();

			System.out.println("Rootlayout erfolgreich!");

		} catch (Exception e) {

			fehlerBeimLadenVonFxmlDateiAnzeigen("Rootlayout: " + e.getMessage());
			System.out.println("Rootlayout: " + e.getMessage());

		}

	}
	
	public void initLösungsLayout(int[][] board, int[][] boardToSolve) {

		try {
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(MainApp.class.getResource("../fxml Dateien/Lösung.fxml"));
			VBox v = (VBox) loader.load();

			LösungController controller = loader.getController();
			controller.setMainApp(this);
			controller.startwerteSetzen(board, boardToSolve);
			this.rootLayout.getChildren().remove(2);
			this.rootLayout.getChildren().add(v);

			System.out.println("Lösunglayout erfolgreich!");

		} catch (Exception e) {

			fehlerBeimLadenVonFxmlDateiAnzeigen("Lösungslayout: " + e.getMessage());
			System.out.println("Lösungslayout: " + e.getMessage());

		}

	}

	
	public static void fehlerBeimLadenVonFxmlDateiAnzeigen(String message) {
		Alert alert = new Alert(AlertType.ERROR);
		alert.setTitle("Ein Fehler ist aufgetreten!");
		alert.setHeaderText("Fehler beim Laden der fxml-Datei!");
		alert.setContentText(message);

		alert.showAndWait();
	}

	public static void unbekanntenFehlerAnzeigen(String message) {
		Alert alert = new Alert(AlertType.ERROR);
		alert.setTitle("Ein Fehler ist aufgetreten!");
		alert.setHeaderText("Unbekannter Fehler!");
		alert.setContentText(message);

		alert.showAndWait();
	}

	public static void main(String[] args) {
		launch(args);
	}

	public Stage getPrimaryStage() {
		return primaryStage;
	}

	public AnchorPane getRootLayout() {
		return rootLayout;
	}

	public Scene getScene() {
		return scene;
	}

	public int getGRID_SIZE() {
		return GRID_SIZE;
	}

	public void setGRID_SIZE(int gRID_SIZE) {
		GRID_SIZE = gRID_SIZE;
	}

	public int[][] getBoard2x2() {
		return board2x2;
	}

	public void setBoard2x2(int[][] board2x2) {
		this.board2x2 = board2x2;
	}

	public int[][] getBoard3x3() {
		return board3x3;
	}

	public void setBoard3x3(int[][] board3x3) {
		this.board3x3 = board3x3;
	}

	public int[][] getBoard4x4() {
		return board4x4;
	}

	public void setBoard4x4(int[][] board4x4) {
		this.board4x4 = board4x4;
	}

}

